{"version":3,"sources":["services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","containers/CourseManagerContainer.js","components/ModuleListComponent.js","services/ModuleService.js","containers/ModuleListContainer.js","components/LessonTabsComponent.js","containers/LessonTabsContainer.js","services/LessonService.js","services/TopicService.js","components/TopicPillsComponent.js","containers/TopicPillsContainer.js","components/widgets/HeadingWidgetComponent.js","components/widgets/ParagraphWidgetComponent.js","components/widgets/YouTubeWidgetComponent.js","components/WidgetListComponent.js","containers/WidgetListContainer.js","services/WidgetService.js","components/CourseEditorComponent.js","components/HomeComponent.js","components/LoginComponent.js","components/SignUpComponent.js","components/ProfileComponent.js","components/WhiteBoardComponent.js","App.js","serviceWorker.js","reducers/ModuleReducer.js","reducers/LessonReducer.js","reducers/TopicReducer.js","reducers/widgetReducer.js","index.js"],"names":["url","course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseRowComponent","state","editing","props","setEditing","setState","ok","courseService","_id","status","updateCourseTitle","newTitle","prevState","title","className","this","to","onChange","event","target","value","owner","modified","onClick","deleteCourse","React","Component","CourseTableComponent","setLayout","courses","map","key","CourseCardComponent","src","alt","CourseGridComponent","CourseManagerContainer","layout","match","params","newCourseTitle","history","push","courseToDelete","filter","addCourse","Date","toDateString","theActualNewCourse","actualArrayOfCourses","prevProps","snapshot","placeholder","ModuleListComponent","newModuleTitle","editingModule","renderEditing","module","e","deleteModule","updateModule","findModuleForCourse","modules","moduleId","createModule","newModule","ModuleListContainer","connect","ownProps","ModuleReducer","dispatch","ModuleService","modulesForTheCourse","type","findAllModules","actualModules","newModuleData","updatedModule","actualNewModule","LessonTabsComponent","editingLesson","renderTab","lesson","isEditing","isHighlight","deleteLesson","updateLesson","findLessonsForModule","lessons","lessonId","undefined","createLesson","LessonTabsContainer","LessonReducer","newLesson","actualLesson","actualLessons","updatedLesson","findLesson","topic","topicId","TopicPillsComponent","editingTopic","renderPill","deleteTopic","updateTopic","findTopicsForLesson","topics","createTopic","TopicPillsContainer","TopicReducer","TopicService","actualTopic","newTopic","actualTopics","updatedTopic","findTopic","HeadingWidgetComponent","update","updateWidget","widget","id","name","widgetOrder","order","text","size","parseInt","moveUp","isLast","moveDown","delete","htmlFor","ParagraphWidgetComponent","widgetName","YouTubeWidgetComponent","WidgetListComponent","select","current","widgets","forEach","deleteWidget","generateWidgetList","copy","slice","sort","a","b","length","findWidgetsForTopic","createWidget","WidgetListContainer","widgetReducer","dispatcher","tid","actualNewWidgetFromServer","wid","widgetId","actualWidgetsFromServer","widgetsFromServer","updatedWidget","CourseEditorComponent","CourseService","result","HomeComponent","LoginComponent","SignUpComponent","ProfileComponent","WhiteBoardComponent","path","exact","component","App","Boolean","window","location","hostname","initialState","action","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b92f28af.chunk.js","sourcesContent":["const url = 'https://wbdv-generic-server.herokuapp.com/api/001886456/courses/';\n\nconst createCourse = (course) =>\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(course),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json());\n\nconst updateCourse = (courseId, course) =>\n    fetch(url + courseId, {\n        method: 'PUT',\n        body: JSON.stringify(course),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json());\n\nconst deleteCourse = (courseId) =>\n    fetch(url + courseId, {\n        method: 'DELETE'\n    })\n        .then(response => response.json());\n\nconst findCourseById = (courseId) => {\n    return fetch(url + courseId)\n        .then(response => response.json());\n};\n\nconst findAllCourses = () =>\n    fetch(url)\n        .then(response => response.json());\n\nexport default {\n    createCourse,\n    deleteCourse,\n    findCourseById,\n    findAllCourses,\n    updateCourse\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from '../services/CourseService'\n\nexport default class CourseRowComponent extends React.Component {\n    state = {\n        editing: false,\n        course: this.props.course\n    };\n\n    setEditing = (editing) =>\n        this.setState({editing: editing});\n\n    ok = () =>\n        courseService.updateCourse(\n            this.state.course._id,\n            this.state.course)\n            .then(status => this.setEditing(false));\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }));\n\n    render() {\n        return (\n            <tr className={this.state.editing ? 'table-primary' : ''}>\n                <td>\n                    {\n                        !this.state.editing &&\n                        <Link to={`/editor/course/${this.state.course._id}`}>\n\n                            {this.state.course.title}\n                        </Link>\n                    }\n                    {\n                        this.state.editing &&\n                        <input\n                            className=\"form-control\"\n                            onChange={(event) => this.updateCourseTitle(event.target.value)}\n                            value={this.state.course.title}/>\n                    }\n                </td>\n                <td className=\"d-none d-sm-table-cell\">{this.state.course.owner}</td>\n                <td className=\"d-none d-md-table-cell\">{this.state.course.modified}</td>\n                <td>\n                    {\n                        !this.state.editing &&\n                        <button\n                            className=\"btn btn-primary\"\n                            onClick={() => this.setEditing(true)}>\n                            <i className=\"fa fa-pencil\"/>\n                        </button>\n                    }\n                    {\n                        this.state.editing &&\n                        <span>\n              <button className=\"btn btn-success\"\n                      onClick={this.ok}>\n                  <i className=\"fa fa-check\"/> </button>\n              <button\n                  className=\"btn btn-danger\"\n                  onClick={\n                      () => this.props.deleteCourse(this.props.course)}>\n                  <i className=\"fa fa-trash\"/></button>\n            </span>\n                    }\n                </td>\n            </tr>\n        )\n    }\n}","import React from \"react\";\nimport CourseRowComponent from \"./CourseRowComponent\";\n\nexport default class CourseTableComponent\n    extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th className=\"d-none d-sm-table-cell\">Owned by</th>\n                        <th className=\"d-none d-md-table-cell\">Last Modified</th>\n                        <th>\n                            <i onClick={() => this.props.setLayout('grid')}\n                               className=\"fa fa-th pr-2\"/>\n                            <i className=\"fa fa-sort-alpha-asc\"/>\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.props.courses.map(course =>\n                                                   <CourseRowComponent\n                                                       deleteCourse={this.props.deleteCourse}\n                                                       key={course._id}\n                                                       course={course}/>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport courseService from \"../services/CourseService\";\nimport {Link} from \"react-router-dom\";\n\nexport default class CourseCardComponent extends React.Component {\n    state = {\n        editing: false,\n        course: this.props.course\n    };\n\n    setEditing = (editing) =>\n        this.setState({editing: editing});\n\n    ok = () =>\n        courseService.updateCourse(\n            this.state.course._id,\n            this.state.course)\n            .then(status => this.setEditing(false));\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }));\n\n    render() {\n        return (\n            <div className=\"col mb-4\">\n                <div className={this.state.editing ? 'card border-primary' : 'card'}>\n                    <img\n                        src=\"https://cdn.pixabay.com/photo/2014/11/18/20/27/elections-536656_1280.png\"\n                        className=\"card-img-top\" alt={this.state.course.title}/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">\n                            {\n                                !this.state.editing &&\n                                <Link to={`/editor/course/${this.state.course._id}`}>\n                                    {this.state.course.title}\n                                </Link>\n                            }\n\n                            {\n                                this.state.editing &&\n                                <input\n                                    className=\"form-control\"\n                                    onChange={(event) => this.updateCourseTitle(event.target.value)}\n                                    value={this.state.course.title}/>\n                            }\n                        </h5>\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                                {this.state.course.owner + \" \" +\n                                 this.state.course.modified}\n                            </small>\n                        </p>\n\n\n                        {\n                            !this.state.editing &&\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={() => this.setEditing(true)}>\n                                <i className=\"fa fa-pencil\"/>\n                            </button>\n                        }\n                        {\n                            this.state.editing &&\n                            <span className=\"btn-group\">\n                              <button className=\"btn btn-success\"\n                                      onClick={this.ok}>\n                                  <i className=\"fa fa-check\"/> </button>\n                              <button\n                                  className=\"btn btn-danger\"\n                                  onClick={\n                                      () => this.props.deleteCourse(this.props.course)}>\n                                  <i className=\"fa fa-trash\"/></button>\n                            </span>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport CourseCardComponent from \"./CourseCardComponent\";\n\nexport default class CourseGridComponent\n    extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Owned by</th>\n                        <th>\n                            <i onClick={() => this.props.setLayout('table')}\n                               className=\"fa fa-list pr-2\"/>\n                            <i className=\"fa fa-sort-alpha-asc\"/>\n                        </th>\n                    </tr>\n                    </thead>\n                </table>\n\n                <div\n                    className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\n                    {\n                        this.props.courses.map(course =>\n                                                   <CourseCardComponent\n                                                       deleteCourse={this.props.deleteCourse}\n                                                       key={course._id}\n                                                       course={course}/>)\n                    }\n\n\n                </div>\n            </div>\n        )\n\n    }\n}","import React from \"react\";\nimport courseService from \"../services/CourseService\";\nimport CourseTableComponent from \"../components/CourseTableComponent\";\nimport CourseGridComponent from \"../components/CourseGridComponent\";\n\nexport default class CourseManagerContainer\n    extends React.Component {\n    state = {\n        layout: this.props.match.params.layout,\n        courses: [],\n        newCourseTitle: 'New Title'\n    };\n\n    componentDidMount() {\n        courseService.findAllCourses()\n            .then(actualArrayOfCourses =>\n                      this.setState({\n                                        courses: actualArrayOfCourses\n                                    }))\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.layout !== this.props.match.params.layout) {\n            this.setState({\n                              layout: this.props.match.params.layout\n                          })\n        }\n    };\n\n    setLayout = (layout) => {\n        this.props.history.push(`/${layout}/courses`)\n    };\n\n    deleteCourse = (courseToDelete) =>\n        courseService.deleteCourse(courseToDelete._id)\n            .then(status => this.setState(prevState => ({\n                courses: prevState\n                    .courses.filter(course => course !== courseToDelete)\n            })));\n\n    addCourse = (title) =>\n        courseService.createCourse({\n                                       title: title,\n                                       owner: 'me',\n                                       modified: (new Date()).toDateString()\n                                   })\n            .then(theActualNewCourse =>\n                      this.setState((prevState) => {\n                          return {\n                              courses: [\n                                  ...prevState.courses,\n                                  theActualNewCourse\n                              ]\n                          }\n                      }));\n\n    render() {\n        return (\n            <div>\n                <div className=\"input-group mb-3\">\n                    <input className=\"form-control\"\n                           onChange={(event) => this.setState({\n                                                                  newCourseTitle: event.target.value\n                                                              })}\n                           value={this.state.newCourseTitle}\n                           placeholder=\"Course Title\"/>\n                    <button className=\"btn btn-outline-primary\"\n                            onClick={\n                                () => this.addCourse(this.state.newCourseTitle)}>\n                        Add Course\n                    </button>\n                </div>\n                {\n                    this.state.layout === 'table' &&\n                    <CourseTableComponent\n                        setLayout={this.setLayout}\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                }\n                {\n                    this.state.layout === 'grid' &&\n                    <CourseGridComponent setLayout={this.setLayout}\n                                         deleteCourse={this.deleteCourse}\n                                         courses={this.state.courses}/>\n                }\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class ModuleListComponent extends React.Component {\n    state = {\n        newModuleTitle: 'New Module',\n        editingModule: {}\n    };\n\n    componentDidMount() {\n        this.props.findModuleForCourse(this.props.params.courseId)\n    }\n\n    renderEditing = (module) => (\n        <div>\n            {this.state.editingModule._id === module._id &&\n             <span>\n                 <input className=\"form-control\"\n                     onChange={(e) => {\n                         const newTitle = e.target.value;\n                         this.setState(prevState => ({\n                             editingModule: {\n                                 ...prevState.editingModule,\n                                 title: newTitle\n                             }\n                         }))\n                     }\n                     }\n                     value={this.state.editingModule.title}\n                 />\n                 <button className=\"btn btn-danger\"\n                         onClick={() => this.props.deleteModule(\n                             module._id)}>\n                     <i className=\"fa fa-trash\"/>\n                 </button>\n                 <button\n                     className=\"btn btn-success\"\n                     onClick={() => {\n                         this.props.updateModule(\n                             this.state.editingModule._id,\n                             this.state.editingModule);\n                         this.setState({editingModule: {}})\n                     }\n                     }>\n                     <i className=\"fa fa-check\"/>\n                 </button>\n             </span>\n            }\n\n            {\n                this.state.editingModule._id !== module._id &&\n                <span>\n\n                    <Link\n                        to={`/editor/course/${this.props.params.courseId}/modules/${module._id}`}>\n                        {module.title}\n                    </Link>\n\n                    <button className=\"btn btn-primary\"\n                            onClick={() => this.setState(\n                                {editingModule: module})}>\n                        <i className=\"fa fa-pencil\"/>\n                    </button>\n                </span>\n            }\n\n        </div>);\n\n    render() {\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {\n                        this.props.modules.map(\n                            module =>\n                                <div key={module._id}>\n                                    {this.props.params.moduleId === module._id &&\n                                     <li key={module._id}\n                                         className=\"list-group-item list-group-item-action list-group-item-primary\">\n                                         {this.renderEditing(module)}\n                                     </li>}\n                                    {this.props.params.moduleId !== module._id &&\n                                     <li key={module._id}\n                                         className=\"list-group-item list-group-item-action\">\n                                         {this.renderEditing(module)}\n                                     </li>\n                                    }\n                                </div>\n                        )}\n                </ul>\n                <input className=\"form-control\"\n                    onChange={(event) =>\n                        this.setState({\n                                          newModuleTitle: event.target.value\n                                      })\n                    }\n                    value={this.state.newModuleTitle}\n                />\n                <button className=\"btn btn-primary\"\n                        onClick={() => this.props.createModule(\n                            this.props.params.courseId,\n                            {\n                                title: this.state.newModuleTitle\n                            })}>\n\n                    <i className=\"fa fa-plus fa-lg\"/>\n                </button>\n            </div>\n        )\n    }\n}\n\n","const findAllModules = () => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001886456/modules\")\n        .then(response => response.json())\n}\n\nconst findModuleForCourse = (courseId) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/courses/${courseId}/modules`)\n        .then(response => response.json())\n\nconst deleteModule = (moduleId) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001886456/modules/\" + moduleId, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n}\n\nconst updateModule = (moduleId, newModule) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/modules/${moduleId}`, {\n        method: 'PUT',\n        body: JSON.stringify(newModule),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst createModule = (courseId, module) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/courses/${courseId}/modules`, {\n        method: 'POST',\n        body: JSON.stringify(module),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport default {\n    findAllModules,\n    deleteModule,\n    createModule,\n    updateModule,\n    findModuleForCourse\n}","import {connect} from \"react-redux\";\nimport ModuleListComponent from \"../components/ModuleListComponent\";\nimport ModuleService from \"../services/ModuleService\";\n\nconst stateToPropertyMapper = (state, ownProps) => {\n    // console.log(ownProps)\n    // console.log(state)\n    return {\n        modules: state.ModuleReducer.modules,\n        newModuleTitle: state.ModuleReducer.newModuleTitle,\n        params: ownProps.params\n        // ownProps: ownProps\n    }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        findModuleForCourse: (courseId) => {\n            ModuleService.findModuleForCourse(courseId)\n                .then(modulesForTheCourse => dispatch({\n                                                          type: 'FIND_MODULES_FOR_COURSE',\n                                                          modules: modulesForTheCourse\n                                                      }))\n        },\n        findAllModules: () => {\n            ModuleService.findAllModules()\n                .then(actualModules => dispatch({\n                                                    type: 'FIND_ALL_MODULES',\n                                                    modules: actualModules\n                                                }))\n        },\n        updateModule: (moduleId, newModuleData) => {\n            ModuleService.updateModule(moduleId, newModuleData)\n                .then(status => dispatch({\n                                             type: 'UPDATE_MODULE',\n                                             updatedModule: newModuleData\n                                         }))\n        },\n        createModule: (courseId, newModule) => {\n            ModuleService.createModule(courseId, newModule)\n                .then(actualNewModule => dispatch({\n                                                      type: \"ADD_MODULE\",\n                                                      newModule: actualNewModule\n                                                  }))\n        },\n        deleteModule  : (moduleId) => {\n            ModuleService.deleteModule(moduleId)\n                .then(status => dispatch({\n                                             type: \"DELETE_MODULE\",\n                                             moduleId: moduleId\n                                         }))\n        }\n    }\n}\n\nconst ModuleListContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(ModuleListComponent)\n\nexport default ModuleListContainer","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class LessonTabsComponent extends React.Component {\n    state = {\n        editingLesson: {}\n    };\n\n    componentDidMount() {\n        this.props.findLessonsForModule(this.props.params.moduleId)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.params.moduleId !== this.props.params.moduleId) {\n            this.props.findLessonsForModule(this.props.params.moduleId)\n        }\n    }\n\n    renderTab = (lesson, isEditing, isHighlight) => (\n        <li className=\"nav-item\">\n            {!isHighlight &&\n             <span className=\"nav-link\">\n                 {this.renderEditing(isEditing, lesson)}\n             </span>}\n\n            {isHighlight &&\n             <span className=\"nav-link active\">\n                 {this.renderEditing(isEditing, lesson)}\n             </span>}\n\n        </li>\n    );\n\n    renderEditing = (isEditing, lesson) => (\n        <div>\n            {!isEditing &&\n             <span>\n                <Link\n                    to={`/editor/course/${this.props.params.courseId}/modules/${this.props.params.moduleId}/lessons/${lesson._id}`}>\n                    {lesson.title}\n                </Link>\n\n                <button className=\"btn btn-primary\"\n                        onClick={() => this.setState(\n                            {editingLesson: lesson})}>\n                    <i className=\"fa fa-pencil\"/>\n                </button>\n             </span>\n            }\n\n            {isEditing &&\n             <span>\n                     <input className=\"form-control\"\n                            onChange={(e) => {\n                                const newTitle = e.target.value;\n                                this.setState(prevState => ({\n                                    editingLesson: {\n                                        ...prevState.editingLesson,\n                                        title: newTitle\n                                    }\n                                }))\n                            }\n                            }\n                            value={this.state.editingLesson.title}\n                     />\n                     <button className=\"btn btn-danger\"\n                             onClick={() => this.props.deleteLesson(lesson._id)}>\n                         <i className=\"fa fa-trash\"/>\n                     </button>\n                     <button\n                         className=\"btn btn-success\"\n                         onClick={() => {\n                             this.props.updateLesson(\n                                 this.state.editingLesson._id,\n                                 this.state.editingLesson);\n                             this.setState({editingLesson: {}})\n                         }\n                         }>\n                         <i className=\"fa fa-check\"/>\n                     </button>\n                 </span>\n            }\n        </div>\n    );\n\n    render() {\n        return (\n            <div>\n                <h3>Lesson Tabs\n                    {/*moduleID: {this.props.params.moduleId}*/}\n                </h3>\n                <ul className=\"nav nav-tabs\">\n                    {this.props.lessons.map(\n                        lesson =>\n                            <div key={lesson._id}>\n                                {this.renderTab(lesson,\n                                                this.state.editingLesson._id === lesson._id,\n                                                this.props.params.lessonId === lesson._id ||\n                                                this.state.editingLesson._id === lesson._id)}\n\n                            </div>)}\n                </ul>\n\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                        if (this.props.params.moduleId !== undefined) {\n                            this.props.createLesson(\n                                this.props.params.moduleId,\n                                {\n                                    title: 'New Lesson'\n                                })\n                        }\n                    }}>\n                    <i className=\"fa fa-plus fa-lg\"/>\n                </button>\n            </div>\n        )\n    }\n}\n\n","import {connect} from \"react-redux\";\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\nimport {\n    findLessonsForModule,\n    createLesson,\n    findLesson,\n    deleteLesson,\n    updateLesson\n} from \"../services/LessonService\"\n\nconst stateToPropertyMapper = (state, ownProps) => ({\n    lessons: state.LessonReducer.lessons,\n    params: ownProps.params\n})\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n    createLesson: (moduleId, newLesson) => {\n        createLesson(moduleId, newLesson)\n            .then(actualLesson => dispatch({\n                                               type: 'CREATE_LESSON',\n                                               newLesson: actualLesson\n                                           }))\n    },\n    findLessonsForModule: (moduleId) => {\n        findLessonsForModule(moduleId)\n            .then(actualLessons => dispatch({\n                                                type: \"FIND_LESSONS_FOR_MODULE\",\n                                                actualLessons: actualLessons\n                                            }))\n    },\n    deleteLesson: (lessonId) => {\n        deleteLesson(lessonId)\n            .then(status => dispatch({\n                                         type: \"DELETE_LESSON\",\n                                         lessonId: lessonId\n                                     }))\n\n    },\n\n    updateLesson: (lessonId, lesson) => {\n        updateLesson(lessonId, lesson)\n            .then(status => dispatch({\n                                         type: 'UPDATE_LESSON',\n                                         updatedLesson: lesson\n                                     }))\n    },\n    findLesson: (lessonId) => {\n        findLesson(lessonId).then(status => dispatch({\n                                                         type: \"FIND_LESSON\",\n                                                         lessonId: lessonId\n                                                     }))\n\n    }\n});\nconst LessonTabsContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(LessonTabsComponent);\nexport default LessonTabsContainer;\n\n","export const findLessonsForModule = (moduleId) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/modules/${moduleId}/lessons`)\n        .then(response => response.json())\n\nexport const createLesson = (moduleId, newLesson) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/modules/${moduleId}/lessons`, {\n        method: 'POST',\n        body: JSON.stringify(newLesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const findLesson = (lessonId) => {\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/lessons/${lessonId}`)\n        .then(response => response.json())\n}\n\nexport const deleteLesson = (lessonId) => {\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/lessons/${lessonId}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n}\n\nexport const updateLesson = (lessonId, lesson) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001886456/modules/${lessonId}`, {\n        method: 'PUT',\n        body: JSON.stringify(lesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n","const findTopic = (topicId) => {\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/YOUR_NEUID/topics/${topicId}`)\n        .then(response => response.json())\n}\n\nconst findTopicsForLesson = (lessonId) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/YOUR_NEUID/lessons/${lessonId}/topics`)\n        .then(response => response.json())\n\nconst deleteTopic = (topicId) => {\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/YOUR_NEUID/topics/${topicId}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n}\n\nconst updateTopic = (topicId, topic) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/YOUR_NEUID/topics/${topicId}`, {\n        method: 'PUT',\n        body: JSON.stringify(topic),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst createTopic = (lessonId, topic) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/YOUR_NEUID/lessons/${lessonId}/topics`, {\n        method: 'POST',\n        body: JSON.stringify(topic),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport default {\n    createTopic,\n    findTopicsForLesson,\n    findTopic,\n    updateTopic,\n    deleteTopic\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './TopicPillsComponent.css';\n\nexport default class TopicPillsComponent extends React.Component {\n    state = {\n        editingTopic: {}\n    };\n\n    componentDidMount() {\n        this.props.findTopicsForLesson(this.props.params.lessonId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.params.lessonId !== this.props.params.lessonId) {\n            this.props.findTopicsForLesson(this.props.params.lessonId)\n        }\n    }\n\n    renderPill = (topic, isEditing, isHighlight) =>\n        <li className=\"nav-item\">\n            {!isHighlight &&\n             <span className=\"nav-link\">\n                 {this.renderEditing(isEditing, topic)}\n             </span>}\n\n            {isHighlight &&\n             <span className=\"nav-link active\">\n                 {this.renderEditing(isEditing, topic)}\n             </span>}\n        </li>;\n\n    renderEditing = (isEditing, topic) =>\n        <div>\n            {isEditing &&\n             <span>\n             <input className=\"form-control\"\n                    onChange={(e) => {\n                        const newTitle = e.target.value;\n                        this.setState(prevState => ({\n                            editingTopic: {\n                                ...prevState.editingTopic,\n                                title: newTitle\n                            }\n                        }))\n                    }\n                    }\n                    value={this.state.editingTopic.title}\n             />\n                <button className=\"btn btn-danger\"\n                        onClick={() => this.props.deleteTopic(topic._id)}>\n                <i className=\"fa fa-trash\"/>\n                </button>\n                <button\n                    className=\"btn btn-success\"\n                    onClick={() => {\n                        this.props.updateTopic(\n                            this.state.editingTopic._id,\n                            this.state.editingTopic);\n                        this.setState({editingTopic: {}})\n                    }\n                    }>\n                <i className=\"fa fa-check\"/>\n                    </button>\n             </span>}\n\n\n            {\n                !isEditing &&\n                <span className=\"nav-link\">\n\n                    <Link\n                        to={`/editor/course/${this.props.params.courseId}/modules/${this.props.params.moduleId}/lessons/${this.props.params.lessonId}/topics/${topic._id}`}>\n                    {topic.title}\n                    </Link>\n\n                    <button className=\"btn btn-primary\"\n                            onClick={() => this.setState(\n                                {editingTopic: topic})}>\n                    <i className=\"fa fa-pencil\"/>\n                    </button>\n                    </span>\n            }\n        </div>;\n\n    render() {\n        return (\n\n            <div>\n                <h3>Topic Pills\n                    {/*lessonID: {this.props.params.lessonId}*/}\n                </h3>\n                <ul className=\"nav nav-pills\">\n                    {this.props.topics.map(\n                        topic =>\n                            <div key={topic._id}>\n                                {this.renderPill(topic, this.state.editingTopic._id === topic._id,\n                                                 this.props.params.topicId === topic._id ||\n                                                 this.state.editingTopic._id === topic._id)}\n                            </div>)}\n\n\n                </ul>\n                <button className=\"btn btn-primary\"\n                        onClick={() => {\n                            if (this.props.params.lessonId !== undefined) {\n                                this.props.createTopic(\n                                    this.props.params.lessonId,\n                                    {\n                                        title: 'New Topic'\n                                    })\n                            }\n                        }}>\n                    <i className=\"fa fa-plus fa-lg\"/>\n                </button>\n            </div>\n        )\n    }\n}\n\n","import {connect} from \"react-redux\";\nimport TopicService from \"../services/TopicService\"\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\n\nconst stateToPropertyMapper = (state, ownProps) => ({\n    topics: state.TopicReducer.topics,\n    params: ownProps.params\n});\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n    createTopic: (lessonId, topic) => {\n        TopicService.createTopic(lessonId, topic)\n            .then(actualTopic => dispatch({\n                                              type: 'CREATE_TOPIC',\n                                              newTopic: actualTopic\n                                          }))\n    },\n    findTopicsForLesson: (lessonId) => {\n        TopicService.findTopicsForLesson(lessonId)\n            .then(actualTopics => dispatch({\n                                               type: \"FIND_TOPICS_FOR_LESSON\",\n                                               actualTopics: actualTopics\n                                           }))\n    },\n    deleteTopic: (topicId) => {\n        TopicService.deleteTopic(topicId)\n            .then(status => dispatch({\n                                         type: \"DELETE_TOPIC\",\n                                         topicId: topicId\n                                     }))\n\n    },\n\n    updateTopic: (topicId, topic) => {\n        TopicService.updateTopic(topicId, topic)\n            .then(status => dispatch({\n                                         type: 'UPDATE_TOPIC',\n                                         updatedTopic: topic\n                                     }))\n    },\n    findTopic: (topicId) => {\n        TopicService.findTopic(topicId)\n            .then(status => dispatch({\n                                         type: \"FIND_TOPIC\",\n                                         topicId: topicId\n                                     }))\n\n    }\n});\nconst TopicPillsContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(TopicPillsComponent);\nexport default TopicPillsContainer;\n\n","import React from \"react\";\n\nexport default class HeadingWidgetComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: true,\n            name: '',\n            type: 'heading',\n            text: '',\n            size: 1,\n            order: 1\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n                          name: this.props.widget.name,\n                          type: this.props.widget.type,\n                          text: this.props.widget.text,\n                          size: this.props.widget.size,\n                          order: this.props.widget.widgetOrder\n                      })\n    }\n\n    update = () => {\n        this.props.updateWidget(this.props.widget.id,\n                                {\n                                    ...this.props.widget,\n                                    name: this.state.name,\n                                    type: this.state.type,\n                                    widgetOrder: this.state.order,\n                                    text: this.state.text,\n                                    size: parseInt(this.state.size)\n                                });\n\n    };\n\n    render() {\n        return <div>\n            <div className={'form-row'}>\n                <h3>Heading Widget{this.state.order}</h3>\n                {this.state.editing &&\n                 <span>\n                         <select value={this.state.size}\n                                 onChange={(e) => this.setState({size: e.target.value})}>\n                        <option value=\"1\">Heading 1</option>\n                        <option value=\"2\">Heading 2</option>\n                        <option value=\"3\">Heading 3</option>\n                        <option value=\"4\">Heading 4</option>\n                        <option value=\"5\">Heading 5</option>\n                        <option value=\"6\">Heading 6</option>\n                    </select>\n                     {\n                         this.props.widget.widgetOrder !== 1 &&\n                         <button className={'btn btn-warning'}\n                                 onClick={() => this.props.moveUp(\n                                     this.props.widget)}>\n                             <i className=\"fa fa-arrow-up\"/>\n                         </button>\n                     }\n                     {\n                         !this.props.isLast &&\n                         <button className={'btn btn-warning'}\n                                 onClick={() => this.props.moveDown(\n                                     this.props.widget)}>\n                             <i className=\"fa fa-arrow-down\"/>\n                         </button>\n                     }\n                     <button className={'btn btn-primary'}\n                             onClick={() => {\n                                 this.update();\n                                 this.setState({editing: false})\n                             }}>\n                        <i className=\"fa fa-check\"/>\n                    </button>\n                    <button className={'btn btn-danger'}\n                            onClick={() => this.props.delete(this.props.widget)}>\n                        <i className=\"fa fa-trash\"/>\n                    </button>\n                </span>}\n                {!this.state.editing &&\n                 <span className='float-right'>\n                 <button className={'btn btn-success'}\n                         onClick={() => this.setState({editing: true})}>\n                     <i className=\"fa fa-pencil\"/>\n                 </button>\n                     </span>\n                }\n            </div>\n            {!this.state.editing &&\n             <div>\n                 {this.state.size == 1 &&\n                  <h1>\n                      {this.props.widget.name}\n                  </h1>}\n                 {this.state.size == 2 &&\n                  <h2>\n                      {this.props.widget.name}\n                  </h2>}\n                 {this.state.size == 3 &&\n                  <h3>\n                      {this.props.widget.name}\n                  </h3>}\n                 {this.state.size == 4 &&\n                  <h4>\n                      {this.props.widget.name}\n                  </h4>}\n                 {this.state.size == 5 &&\n                  <h5>\n                      {this.props.widget.name}\n                  </h5>}\n                 {this.state.size == 6 &&\n                  <h6>\n                      {this.props.widget.name}\n                  </h6>}\n\n                 <p>\n                     {this.props.widget.text}\n                 </p>\n             </div>}\n\n            {this.state.editing &&\n             <form>\n                 <div className={'form-group row'}>\n                     <label className=\"col-md-2 col-form-label\"\n                            htmlFor={`headingText${this.props.widget.id}`}>\n                         Text:\n                     </label>\n                     <div className={'col-md-10'}>\n                        <textarea value={this.state.text}\n                                  placeholder=\"Paragraph text\"\n                                  className=\"form-control\"\n                                  id={`headingText${this.props.widget.id}`}\n                                  onChange={(e) => this.setState({text: e.target.value})}/>\n                     </div>\n                 </div>\n                 <div className={'form-group row'}>\n                     <label className=\"col-md-2 col-form-label\"\n                            htmlFor={`headingName${this.props.widget.id}`}>\n                         Widget Name:\n                     </label>\n                     <div className={'col-md-10'}>\n                         <input value={this.state.name}\n                                placeholder=\"Widget Name\"\n                                className=\"form-control\"\n                                onChange={(e) => this.setState({name: e.target.value})}\n                                id={`headingName${this.props.widget.id}`}/>\n                     </div>\n                 </div>\n\n                 <div className={'form-group row'}>\n                     <label className=\"col-md-2 col-form-label\"\n                            htmlFor={`htype${this.props.widget.id}`}>\n                         Widget Type:\n                     </label>\n                     <div className={'col-md-10'}>\n                         <select className=\"form-control\"\n                                 value={this.state.type}\n                                 id={`htype${this.props.widget.id}`}\n                                 onChange={(e) => this.setState({type: e.target.value})}>\n                             <option value='HEADING'>Heading</option>\n                             <option value='PARAGRAPH'>Paragraph</option>\n                         </select>\n                     </div>\n                 </div>\n\n             </form>}\n        </div>\n    }\n}","import React from \"react\";\n\nexport default class ParagraphWidgetComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false,\n            text: '',\n            widgetName: '',\n            order: 1,\n            type: 'PARAGRAPH'\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n                          text: this.props.widget.text,\n                          widgetName: this.props.widget.name,\n                          order: this.props.widget.widgetOrder,\n                          type: this.props.widget.type\n                      })\n    }\n\n    update = () =>\n        this.props.updateWidget(this.props.widget.id,\n                                {\n                                    ...this.props.widget,\n                                    name: this.state.widgetName,\n                                    type: this.state.type,\n                                    widgetOrder: this.state.order,\n                                    text: this.state.text\n                                });\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h3>Paragraph Widget{this.state.order}</h3>\n                    {this.state.editing &&\n                     <span className='float-right'>\n                         {\n                             this.state.order !== 1 &&\n                             <button className={'btn btn-warning'}\n                                     onClick={() => this.props.moveUp(\n                                         this.props.widget)}>\n                                 <i className=\"fa fa-arrow-up\"/>\n                             </button>\n                         }\n                         {\n                             !this.props.isLast && <button className={'btn btn-warning'}\n                                                           onClick={() => this.props.moveDown(\n                                                               this.props.widget)}>\n                                 <i className=\"fa fa-arrow-down\"/>\n                             </button>\n                         }\n                         <button className={'btn btn-primary'}\n                                 onClick={() => {\n                                     this.update();\n                                     this.setState({editing: false})\n                                 }}>\n                            <i className=\"fa fa-check\"/>\n                        </button>\n                         <button className={'btn btn-danger'}\n                                 onClick={() => this.props.delete(this.props.widget)}>\n                               <i className=\"fa fa-trash\"/>\n                         </button>\n                    </span>\n                    }\n                    {!this.state.editing &&\n                     <span className='float-right'>\n                         <button className={'btn btn-success'}\n                                 onClick={() => this.setState({editing: true})}>\n                             <i className=\"fa fa-pencil\"/>\n                         </button>\n                     </span>\n                    }\n                </div>\n                {!this.state.editing &&\n                 <div>\n                     <h4>\n                         {this.props.widget.name}\n                     </h4>\n                     <p>\n                         {this.props.widget.text}\n                     </p>\n                 </div>}\n                {this.state.editing &&\n                 <form>\n                     <div className={'form-group row'}>\n                         <label className=\"col-md-2 col-form-label\"\n                                htmlFor={`ParaText${this.props.widget.id}`}>\n                             Text:\n                         </label>\n                         <div className={'col-md-10'}>\n                            <textarea value={this.state.text}\n                                      placeholder=\"Paragraph text\"\n                                      className=\"form-control\"\n                                      id={`ParaText${this.props.widget.id}`}\n                                      onChange={(e) => this.setState({text: e.target.value})}/>\n                         </div>\n                     </div>\n\n                     <div className={'form-group row'}>\n                         <label className=\"col-md-2 col-form-label\"\n                                htmlFor={`ParaName${this.props.widget.id}`}>\n                             Widget Name:\n                         </label>\n                         <div className={'col-md-10'}>\n                             <input value={this.state.widgetName}\n                                    placeholder=\"Widget Name\"\n                                    className=\"form-control\"\n                                    onChange={(e) => this.setState({widgetName: e.target.value})}\n                                    id={`ParaName${this.props.widget.id}`}/>\n                         </div>\n                     </div>\n\n                     <div className={'form-group row'}>\n                         <label className=\"col-md-2 col-form-label\"\n                                htmlFor={`ParaType${this.props.widget.id}`}>\n                             Widget Type:\n                         </label>\n                         <div className={'col-md-10'}>\n                             <select className=\"form-control\"\n                                     value={this.state.type}\n                                     id={`ParaType${this.props.widget.id}`}\n                                     onChange={(e) => this.setState({type: e.target.value})}>\n                                 <option value='HEADING'>Heading</option>\n                                 <option value='PARAGRAPH'>Paragraph</option>\n                             </select>\n                         </div>\n                     </div>\n                 </form>}\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nexport default class YouTubeWidgetComponent extends React.Component {\n    render() {\n        return(\n            <div>\n                <h3>YouTube Widget</h3>\n                {this.props.widget.name}\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport HeadingWidgetComponent from \"./widgets/HeadingWidgetComponent\";\nimport ParagraphWidgetComponent from \"./widgets/ParagraphWidgetComponent\";\nimport YouTubeWidgetComponent from \"./widgets/YouTubeWidgetComponent\";\n\nexport default class WidgetListComponent extends React.Component {\n\n    componentDidMount() {\n        this.props.findWidgetsForTopic(this.props.params.topicId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.params.topicId !== this.props.params.topicId) {\n            this.props.findWidgetsForTopic(this.props.params.topicId);\n        }\n    };\n\n    moveDown = select => {\n        let current = select.widgetOrder;\n        this.props.widgets.forEach(widget => {\n            if (widget.widgetOrder === current) {\n                this.props.updateWidget(widget.id, {...widget, widgetOrder: widget.widgetOrder + 1})\n            } else if (widget.widgetOrder === current + 1) {\n                this.props.updateWidget(widget.id, {...widget, widgetOrder: widget.widgetOrder - 1})\n            }\n        })\n    };\n    moveUp = select => {\n        let current = select.widgetOrder;\n        this.props.widgets.forEach(widget => {\n            if (widget.widgetOrder === current) {\n                this.props.updateWidget(widget.id,\n                                        {...widget, widgetOrder: widget.widgetOrder - 1})\n            } else if (widget.widgetOrder === current - 1) {\n                this.props.updateWidget(widget.id, {...widget, widgetOrder: widget.widgetOrder + 1})\n            }\n        })\n    };\n\n    delete = (select) => {\n        this.props.deleteWidget(select.id);\n        this.props.widgets.forEach(widget => {\n            if (widget.widgetOrder > select.widgetOrder) {\n                this.props.updateWidget(widget.id,\n                                        {...widget, widgetOrder: widget.widgetOrder - 1})\n            }\n        })\n    };\n\n    generateWidgetList = () => {\n        let copy = this.props.widgets.slice(0);\n        copy.sort((a, b) => {\n            if (a.widgetOrder > b.widgetOrder) {\n                return 1;\n            } else if (a.widgetOrder < b.widgetOrder) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n        return copy.map(widget =>\n                            <li key={widget.id}\n                                className=\"list-group-item\">\n                                {\n                                    widget.type === 'HEADING' &&\n                                    <HeadingWidgetComponent widget={widget}\n                                                            updateWidget={this.props.updateWidget}\n                                                            delete={this.delete}\n                                                            moveUp={this.moveUp}\n                                                            moveDown={this.moveDown}\n                                                            isLast={widget.widgetOrder\n                                                                    === this.props.widgets.length}/>\n                                }\n                                {\n                                    widget.type === 'PARAGRAPH' &&\n                                    <ParagraphWidgetComponent widget={widget}\n                                                              updateWidget={this.props.updateWidget}\n                                                              delete={this.delete}\n                                                              moveUp={this.moveUp}\n                                                              moveDown={this.moveDown}\n                                                              isLast={widget.widgetOrder\n                                                                      === this.props.widgets.length}/>\n                                }\n                                {\n                                    widget.type === 'YOUTUBE' &&\n                                    <YouTubeWidgetComponent widget={widget}\n                                                            updateWidget={this.props.updateWidget}\n                                                            delete={this.delete}\n                                                            moveUp={this.moveUp}\n                                                            moveDown={this.moveDown}\n                                                            isLast={widget.widgetOrder\n                                                                    === this.props.widgets.length}/>\n                                }\n                            </li>)\n\n    };\n\n    render() {\n        // console.log(this.props.widgets);\n        return (\n            <div>\n                <h2>Widget List</h2>\n                <ul className=\"list-group\">\n                    {this.props.params.topicId !== undefined &&\n                     this.generateWidgetList()}\n                </ul>\n                <button className={'btn btn-primary'}\n                        onClick={() => {\n                            if (this.props.params.topicId !== undefined) {\n                                this.props.createWidget(this.props.params.topicId, {\n                                    type: 'HEADING',\n                                    name: 'New Widget',\n                                    size: 1,\n                                    text: '',\n                                    widgetOrder: this.props.widgets.length + 1\n                                })\n                            }\n                        }}>\n                    <i className={'fa fa-plus'}/>\n                </button>\n            </div>\n        )\n    }\n}\n\n","import {\n    createWidget,\n    deleteWidget,\n    findWidgetsForTopic,\n    updateWidget\n} from \"../services/WidgetService\";\nimport {connect} from \"react-redux\";\nimport WidgetListComponent from \"../components/WidgetListComponent\";\n\nconst stateToPropertyMapper = (state) => ({\n    widgets: state.widgetReducer.widgets\n});\n\nconst dispatchToPropertyMapper = (dispatcher) => ({\n    createWidget: (tid, widget) =>\n        createWidget(tid, widget)\n            .then(actualNewWidgetFromServer =>\n                      dispatcher({\n                                     type: \"CREATE_WIDGET\",\n                                     widget: actualNewWidgetFromServer\n                                 })\n            ),\n    deleteWidget: (wid) =>\n        deleteWidget(wid)\n            .then(status =>\n                      dispatcher({\n                                     type: \"DELETE_WIDGET\",\n                                     widgetId: wid\n                                 })),\n    findWidgetsForTopic: (tid) =>\n        findWidgetsForTopic(tid)\n            .then(actualWidgetsFromServer =>\n                      dispatcher({\n                                     type: \"FIND_WIDGETS_FOR_TOPIC\",\n                                     widgetsFromServer: actualWidgetsFromServer\n                                 })),\n    updateWidget: (wid, widget) =>\n        updateWidget(wid, widget)\n            .then(status =>\n                      dispatcher({\n                                     type: \"UPDATE_WIDGET\",\n                                     updatedWidget: widget\n                                 }))\n\n});\n\nconst WidgetListContainer = connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper)\n(WidgetListComponent);\nexport default WidgetListContainer;","export const findWidgetsForTopic = (tid) =>\n    fetch(`http://localhost:8080/api/topics/${tid}/widgets`)\n        .then(response => response.json());\n\nexport const deleteWidget = (wid) =>\n    fetch(`http://localhost:8080/api/widgets/${wid}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json());\n\nexport const createWidget = (tid, widget) =>\n    fetch(`https://cs4550-20su1-fengyi-ass5.herokuapp.com//api/topics/${tid}/widgets`, {\n        method: 'POST',\n        body: JSON.stringify(widget),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json());\n\nexport const findWidgetById = (wid) =>\n    fetch(`https://cs4550-20su1-fengyi-ass5.herokuapp.com//api/widgets/${wid}`).then(response => response.json());\n\nexport const updateWidget = (wid, widget) =>\n    fetch(`https://cs4550-20su1-fengyi-ass5.herokuapp.com//api/widgets/${wid}`, {\n        method: 'PUT',\n        body: JSON.stringify(widget),\n        headers: {\n            'content-type': 'application/json'\n        }\n    });","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ModuleListContainer from \"../containers/ModuleListContainer\";\nimport LessonTabsContainer from \"../containers/LessonTabsContainer\";\nimport TopicPillsContainer from \"../containers/TopicPillsContainer\";\nimport WidgetListContainer from \"../containers/WidgetListContainer\";\nimport CourseService from \"../services/CourseService\";\n\nexport default class CourseEditorComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: ''\n        }\n    }\n\n    componentDidMount() {\n        CourseService.findCourseById(this.props.match.params.courseId)\n            .then(result =>\n                      this.setState({\n                                        title: result.title\n                                    }));\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"form-inline\">\n                    <Link to=\"/table/courses\">\n                        <i className=\"fa fa-times fa-2x pr-2\"/>\n                    </Link>\n                    <h2>Course Editor</h2>\n                </div>\n\n                <h1>{this.state.title}</h1>\n                {/*{this.props.match.params.courseId}*/}\n\n\n                <div className=\"row\">\n                    <div className=\"col-4\">\n                        <ModuleListContainer {...this.props.match}/>\n                    </div>\n                    <div className=\"col-8\">\n                        <LessonTabsContainer {...this.props.match}/>\n                        <TopicPillsContainer {...this.props.match}/>\n                        <WidgetListContainer {...this.props.match}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst HomeComponent = () =>\n    <div>\n        <h2>Home</h2>\n        <div className=\"list-group\">\n            <Link className=\"list-group-item\" to='/editor'>\n                Course Editor\n            </Link>\n            <Link className=\"list-group-item\" to='/table/courses'>\n                Course List\n            </Link>\n            <Link className=\"list-group-item\" to='/login'>\n                Login\n            </Link>\n            <Link className=\"list-group-item\" to='/register'>\n                Registration\n            </Link>\n            <Link className=\"list-group-item\" to='/profile'>\n                Profile\n            </Link>\n        </div>\n    </div>;\n\nexport default HomeComponent;","import React from \"react\";\n\nconst LoginComponent = () =>\n    <div>\n        <h2>Login</h2>\n    </div>;\n\nexport default LoginComponent;","import React from \"react\";\n\nconst SignUpComponent = () =>\n    <div>\n        <h2>SignUp</h2>\n    </div>;\n\nexport default SignUpComponent;","import React from \"react\";\n\nconst ProfileComponent = () =>\n    <div>\n        <h2>Profile</h2>\n    </div>;\n\nexport default ProfileComponent;","import React from 'react';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport CourseManagerContainer from \"../containers/CourseManagerContainer\";\nimport CourseEditorComponent from \"./CourseEditorComponent\";\nimport HomeComponent from \"./HomeComponent\";\nimport LoginComponent from \"./LoginComponent\";\nimport SignUpComponent from \"./SignUpComponent\";\nimport ProfileComponent from \"./ProfileComponent\";\n\nexport default class WhiteBoardComponent extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <h1>Course Manager !!!!</h1>\n\n                    <Route path=\"/login\" exact={true} component={LoginComponent}/>\n                    <Route path=\"/register\" exact={true} component={SignUpComponent}/>\n                    <Route path=\"/profile\" exact={true} component={ProfileComponent}/>\n                    <Route\n                        path='/'\n                        exact={true}\n                        component={HomeComponent}/>\n\n                    <Route\n                        path='/:layout/courses'\n                        exact={true}\n                        component={CourseManagerContainer}/>\n\n                    <Route\n                        path={['/editor/course/:courseId', '/editor/course/:courseId/modules/:moduleId',\n                               `/editor/course/:courseId/modules/:moduleId/lessons/:lessonId`,\n                               `/editor/course/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId`]}\n                        exact={true}\n                        component={CourseEditorComponent}/>\n\n\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n","import React from 'react';\nimport WhiteBoardComponent from \"./components/WhiteBoardComponent\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <WhiteBoardComponent/>\n        </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Finite State Machine\n// (S1) --e1--> (S2)\n// (S1) --e2--> (S3)\n\nconst initialState = {\n    newModuleTitle: 'Some Module',\n    modules: []\n};\n\nconst ModuleReducer = (state = initialState, event) => {\n    switch (event.type) {\n        case \"UPDATE_MODULE\":\n            return {\n                ...state,\n                modules: state.modules.map(\n                    module => module._id === event.updatedModule._id ?\n                              event.updatedModule : module)\n            };\n        case \"FIND_MODULES_FOR_COURSE\":\n            return {\n                ...state,\n                modules: event.modules\n            };\n        case \"FIND_ALL_MODULES\":\n            return {\n                ...state,\n                modules: event.modules\n            };\n        case \"ADD_MODULE\":\n            return {\n                modules: [\n                    ...state.modules,\n                    event.newModule\n                ]\n            };\n        case \"DELETE_MODULE\":\n            return {\n                modules: state.modules.filter(module => module._id !== event.moduleId)\n            };\n        default:\n            return state\n    }\n};\n\nexport default ModuleReducer","const initialState = {\n    lessons: []\n};\n\nconst LessonReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"DELETE_LESSON\":\n            return {\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\n            };\n        case \"FIND_LESSONS_FOR_MODULE\":\n            return {\n                ...state,\n                lessons: action.actualLessons\n            };\n        case \"CREATE_LESSON\":\n            return {\n                lessons: [...state.lessons,\n                          action.newLesson]\n            };\n        case \"FIND_LESSON\":\n            return {\n                ...state,\n                lessons: action.lessons\n            };\n        case \"UPDATE_LESSON\":\n            return {\n                ...state,\n                lessons: state.lessons.map(\n                    lesson => lesson._id === action.updatedLesson._id ?\n                              action.updatedLesson : lesson)\n            };\n        default:\n            return state\n    }\n};\n\nexport default LessonReducer","const initialState = {\n    topics: []\n};\n\nconst TopicReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"DELETE_TOPIC\":\n            return {\n                topics: state.topics.filter(lesson => lesson._id !== action.topicId)\n            };\n        case \"FIND_TOPICS_FOR_LESSON\":\n            return {\n                ...state,\n                topics: action.actualTopics\n            };\n        case \"CREATE_TOPIC\":\n            return {\n                ...state,\n                topics: [...state.topics,\n                         action.newTopic]\n            };\n        case\"FIND_TOPIC\":\n            return {\n                ...state,\n                topics: action.topics\n            };\n        case\"UPDATE_TOPIC\":\n            return {\n                ...state,\n                topics: state.topics.map(\n                    topic => topic._id === action.updatedTopic._id ?\n                             action.updatedTopic : topic)\n            };\n        default:\n            return state;\n    }\n};\n\nexport default TopicReducer","const initialState = {\n    widgets: []\n};\n\nconst widgetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"CREATE_WIDGET\":\n            return {\n                ...state,\n                widgets: [...state.widgets, action.widget]\n            };\n        case \"FIND_WIDGETS_FOR_TOPIC\":\n            return {\n                ...state,\n                widgets: action.widgetsFromServer\n            };\n        case \"DELETE_WIDGET\":\n            return {\n                ...state,\n                widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\n            };\n        case \"UPDATE_WIDGET\":\n            return {\n                ...state,\n                widgets: state.widgets.map(\n                    widget => widget.id === action.updatedWidget.id ?\n                              action.updatedWidget : widget)\n            };\n        default:\n            return state;\n    }\n};\n\nexport default widgetReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport ModuleReducer from './reducers/ModuleReducer'\nimport LessonReducer from \"./reducers/LessonReducer\";\nimport TopicReducer from \"./reducers/TopicReducer\";\nimport widgetReducer from \"./reducers/widgetReducer\";\n\nconst reducers = combineReducers({\n                                     ModuleReducer, LessonReducer, TopicReducer,widgetReducer\n                                 });\nconst store = createStore(reducers);\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}